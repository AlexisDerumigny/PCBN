% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Hill_climbing.R
\name{allowed_operations_fromDAG}
\alias{allowed_operations_fromDAG}
\alias{operation_do}
\alias{operation_undo}
\title{Finds all operations resulting in a restricted DAG}
\usage{
allowed_operations_fromDAG(DAG)

operation_do(DAG, op)

operation_undo(DAG, op)
}
\arguments{
\item{DAG}{the current DAG.}

\item{op}{the operation to be applied
It should be a list with at least the elements \code{from}, \code{to}, and
\code{operation}. \code{From} and \code{to} are the nodes (characters) and
\code{operation} is a character describing the operation to be applied.}
}
\value{
\code{allowed_operations_fromDAG} returns a \code{data.frame}
with 3 columns: \code{from}, \code{to}, \code{operation}.
Possible operations are \code{"set"}, \code{"drop"} and \code{"reverse"}.

\code{operation_do} and \code{operation_undo} return the modified DAG after
applying or undoing the operation. Note that this does not modify the
original DAG.
}
\description{
Finds all operations resulting in a restricted DAG
}
\examples{

# We create an empty DAG with 4 nodes
DAG1 = create_DAG(4)

# Which kind of operations are possible?
operations = allowed_operations_fromDAG(DAG1)

# We apply the first possible operation
op = operations[1,]
DAG2 = operation_do(DAG1, op)

# and then undo it
DAG3 = operation_undo(DAG2, op)

# We come back to the original DAG
stopifnot(identical(DAG1, DAG3))

}
